<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="b">
	
	<!-- 전체 게시글 조회 -->
	<select id="board_list" resultType="board" parameterType="java.lang.String">
		select idx, m_name, id, ip, content, scope, to_char(regdate, 'yyyy/mm/dd') regdate from review
		where m_name = #{m_name} order by idx desc
		<!-- where m_name = #{m_name} -->
	</select>
	
	<!-- 평점 평균 조회 -->
	<select id="sum" resultType="int" parameterType="java.lang.String">
		select sum(scope) from review where m_name = #{m_name}
	<!-- where m_name = #{m_name} -->
	</select>
	
	<select id="num" resultType="int" parameterType="java.lang.String">
		select count(*) from review where m_name = #{m_name}
	<!-- where m_name = #{m_name} -->
	</select>
	
	<!-- 내 영화 조회 -->
	<select id="user_m_name" resultType="String" parameterType="java.lang.String">
		select m_name from review where m_name = #{m_name}
	<!-- where m_name = #{m_name} 클릭한 영화 받아오기-->
	</select>
	
	
	<insert id="board_insert" parameterType="board">
		insert into review values(
			seq_rev_idx.nextVal,
			'인셉션',
			#{id},
			'192.1.8.2',
			#{content},
			#{scope},
			sysdate)
		<!-- insert into review values(
			seq_rev_idx.nextVal,
			#{m_name},
			#{id},
			#{ip},
			#{content},
			#{scope},
			sysdate
		) -->
		
	</insert>
	
	<!-- 회원별 리뷰 조회 -->
	<select id="user_contnet" resultType="java.lang.String">
		select content from review where id = #{id}
	</select>
	
	<!-- 수정하기위해 내용 얻어오기 -->
	<select id="board_modify" resultType="board" parameterType="String">
		select * from review where id = #{id}
	</select>
	
	<!-- 수정 업데이트 -->
	<update id="board_update" parameterType="board">
		update review set content=#{content}, scope=#{scope} where id=#{id}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="board_delete" parameterType="String">
		delete from review where id=#{id}
	</delete>
	
	<!-- 페이지에 따른 게시물 조회 -->				<!-- 여기선 hashmap인지 map인지 확실히 해줘야 함! -->
	<select id="board_list_condition" parameterType="java.util.Map" resultType="board">
		select * from
		(select rank() over(order by idx desc) no, r.*
		from ( select idx, m_name, id, ip, content, scope, to_char(regdate, 'yyyy/mm/dd') regdate from review where m_name = #{m_name}) r)
		where no between #{start} and #{end}
	</select>
	
	<!-- 전체 게시물 수 조회 -->
	<select id="board_count" resultType="int">
		select count(*) from review
	</select>
</mapper>












